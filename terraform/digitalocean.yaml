variable:
  BASE_DOMAIN:      { default: befaircloud.me }
  NODES:            { default: 3 }
  SSH_PRIVKEY_PATH: { default: .cache/id_rsa }
  SSH_PUBKEY_PATH:  { default: .cache/id_rsa.pub }
  OMASTER:          { default: /opt/bin/openshift.local.config/master }
  ONODE:            { default: /opt/bin/openshift.local.config/node }
  # Provider specific
  DO_TOKEN:         {}
  DO_SSH_ID:        { default: core }
  DO_IMAGE:         { default: coreos-alpha }
  DO_REGION:        { default: fra1 }
  DO_MASTER_SIZE:   { default: 1gb }
  DO_NODE_SIZE:     { default: 2gb }

provider:
  digitalocean:
    token: ${var.DO_TOKEN}

resource:
  template_file:
    master_conf:
      filename: terraform/master.yaml
      vars:
        HOME: /home/core
        OMASTER: ${var.OMASTER}
        SSH_PUBKEY: ${file("${var.SSH_PUBKEY_PATH}")}
        BASE_DOMAIN: ${var.BASE_DOMAIN}

    node_conf:
      filename: terraform/node.yaml
      vars:
        HOME: /home/core
        OMASTER: ${var.OMASTER}
        ONODE: ${var.ONODE}
        MASTER_IP: ${digitalocean_droplet.master.ipv4_address_private}
        SSH_PUBKEY: ${file("${var.SSH_PUBKEY_PATH}")}
      depends_on:
      - digitalocean_droplet.master

  digitalocean_ssh_key:
    superuser:
      name: ${var.DO_SSH_ID}
      public_key: ${file("${var.SSH_PUBKEY_PATH}")}
  digitalocean_droplet:
    master:
      image: ${var.DO_IMAGE}
      name: master
      region: ${var.DO_REGION}
      size: ${var.DO_MASTER_SIZE}
      ipv6: true
      private_networking: true
      user_data: ${template_file.master_conf.rendered}
      ssh_keys:
      - ${digitalocean_ssh_key.superuser.fingerprint}
      depends_on:
      - template_file.master_conf
      connection:
        user: core
        key_file: ${var.SSH_PRIVKEY_PATH}
      provisioner:
        file:
          source: .cache/master.tar.gz
          destination: /home/core/master.tar.gz
        remote-exec:
          inline:
          - /opt/bin/wufae /home/core/master.tar.gz
          - sudo tar -xf /home/core/master.tar.gz -C /opt/bin
          - rm -f /home/core/master.tar.gz

    nodes:
      count: ${var.NODES}
      image: ${var.DO_IMAGE}
      name:  node-${count.index}
      region: ${var.DO_REGION}
      size: ${var.DO_NODE_SIZE}
      ipv6: true
      private_networking: true
      user_data: ${template_file.node_conf.rendered}
      ssh_keys:
      - ${digitalocean_ssh_key.superuser.fingerprint}
      depends_on:
      - digitalocean_droplet.master
      - template_file.node_conf
      connection:
        user: core
        key_file: ${var.SSH_PRIVKEY_PATH}
      provisioner:
        file:
          source: .cache/node.tar.gz
          destination: /home/core/node.tar.gz
        remote-exec:
          inline:
          - /opt/bin/wufae /home/core/node.tar.gz
          - sudo tar -xf /home/core/node.tar.gz -C /opt/bin
          - rm -f /home/core/node.tar.gz

  digitalocean_domain:
    cloud:
      name: ${var.BASE_DOMAIN}
      ip_address: ${digitalocean_droplet.nodes.0.ipv4_address}
      depends_on:
      - digitalocean_droplet.nodes

  digitalocean_record:
    cloud_ipv4:
      domain: ${digitalocean_domain.cloud.name}
      type: A
      name: '*'
      value: ${digitalocean_droplet.nodes.0.ipv4_address}

output:
  openshift:
    value: |
      openshift dashboard -- https://${digitalocean_droplet.master.ipv4_address}:8443
      log to node-0 -- ssh -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no core@${digitalocean_droplet.nodes.0.ipv4_address}
      external entrypoint -- http://${digitalocean_droplet.nodes.0.ipv4_address}
  todo1:
    value: |
      scp -r -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no openshift core@${digitalocean_droplet.master.ipv4_address}:./; \
      scp -r -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no core@${digitalocean_droplet.master.ipv4_address}:./master .cache/; \
      scp -r -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no .cache/master core@${digitalocean_droplet.nodes.0.ipv4_address}:./
  todo1bis:
    value: |
      scp -r -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no .cache/master core@${digitalocean_droplet.nodes.1.ipv4_address}:./; \
      scp -r -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no .cache/master core@${digitalocean_droplet.nodes.2.ipv4_address}:./
  todo2:
    value: |
      log to master -- ssh -i ${var.SSH_PRIVKEY_PATH} -o StrictHostKeyChecking=no core@${digitalocean_droplet.master.ipv4_address}
